#!/bin/bash

input_file=$1

# 找出最受欢迎的 Domain 和 Mechanics
awk -F'\t' '
BEGIN {
    OFS="\t"
}
NR > 1 {
    # 分析 Domains
    split($NF, domains, ", ")
    for (domain in domains) {
        domain_count[domains[domain]]++
    }
    # 分析 Mechanics
    split($(NF-1), mechanics, ", ")
    for (mechanic in mechanics) {
        mechanics_count[mechanics[mechanic]]++
    }
}
END {
    # 找出最多的
    for (domain in domain_count) {
        if (domain_count[domain] > max_domain_count) {
            max_domain_count = domain_count[domain]
            most_popular_domain = domain
        }
    }
    for (mechanic in mechanics_count) {
        if (mechanics_count[mechanic] > max_mechanics_count) {
            max_mechanics_count = mechanics_count[mechanic]
            most_popular_mechanics = mechanic
        }
    }
    print "The most popular game domain is", most_popular_domain, "found in", max_domain_count, "games"
    print "The most popular game mechanics is", most_popular_mechanics, "found in", max_mechanics_count, "games"
}
' "$input_file"

# 计算皮尔逊相关系数
calculate_pearson() {
    awk -F'\t' -v col1="$1" -v col2="$2" '
    NR > 1 {
        x[NR] = $col1
        y[NR] = $col2
        sum_x += x[NR]
        sum_y += y[NR]
        sum_x2 += x[NR] * x[NR]
        sum_y2 += y[NR] * y[NR]
        sum_xy += x[NR] * y[NR]
        n++
    }
    END {
        numerator = (n * sum_xy) - (sum_x * sum_y)
        denominator = sqrt((n * sum_x2 - sum_x^2) * (n * sum_y2 - sum_y^2))
        if (denominator == 0) {
            printf "Correlation: Undefined (division by zero)\n"
        } else {
            printf "%.3f\n", numerator / denominator
        }
    }
    ' "$input_file"
}

# 计算出版年份和平均评分的相关性
echo -n "The correlation between the year of publication and the average rating is "
calculate_pearson 3 9

# 计算游戏复杂性和平均评分的相关性
echo -n "The correlation between the complexity of a game and its average rating is "
calculate_pearson 11 9